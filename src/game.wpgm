import wollok.game.*
import nave.*
import cohete.*
import jugador.*
import miposicion.*
import utils.*
import display.*
import bar.*
import covid.*

program game {
	game.title("PdePepita")
	
	/*
	cellSize es el tamaño de cada posicion en la pantalla, cuanto mas chico mas fluido va a ser,
	pero como es bastante ineficiente consume mucho mas recursos con grillas grandes
	*/
	game.cellSize(utils.cellSize())
	//tamaño en celdas
	game.width(400) 
	game.height(300)
	
	// Metodos que inicializan las variables de los objetos nave y covid
	// (necesario porque ambos heredan de la clase abstracta Movil, 
	// que tiene el metodo Mover() implementado, y de manera abstracta
	// los metodos actualizarImagen() e init()
	// con esto evitamos repetir el movimiento de los jugadores
	nave.init()
	covid.init()
	game.addVisual(nave)
	game.addVisual(covid)
	
	// ver bar.wlk, esta es la barra de covid por proximidad
	covidBar.mostrar()
	
	// ver display.wlk, este es el cartelito numerico (en lo posible, mejorar implementacion)
	display.position(new MiPosicion(x = game.width() /2, y = game.height() - utils.getPixel(24)))
	
	const movPj = {
		nave.mover()
		covid.mover()
	}
	
	const timer = {
		/*
		var val = display.valor()
		if(val > 0)
			val -=1
		
		display.mostrarNum(val)
		*/
	}
	
	game.onTick(8, "mover pj", movPj)
	game.onTick(1000, "timer", timer)
	game.onTick(50, "dist display", {display.mostrarNum(covid.obtenerDistancia(nave))})
	game.onTick(50, "dist covidBar", {covidBar.actualizar(covid.obtenerDistancia(nave))})
	
	utils.configTeclas()
	
	game.start()
}